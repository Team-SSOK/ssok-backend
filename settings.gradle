rootProject.name = 'ssok-backend'

//전체 빌드시 추가할 모듈을 이곳에 명시 할 것
include 'ssok-common'
include 'ssok-transfer-service'
include 'ssok-user-service'
include 'ssok-account-service'
include 'ssok-gateway'
include 'ssok-config'

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // 버전 정의
            version('springBoot', '3.4.4')
            version('springDependencyManagement', '1.1.7')
            version('gson', '2.7')
            version('jwt', '0.12.6')
            version('springCloud', '2024.0.0')
            version('swagger', '2.3.0')
            version('lombok', '1.18.24')
            version('jackson', '2.18.3')  // Jackson 버전 추가
            
            // 플러그인 정의
            plugin('springBoot', 'org.springframework.boot').versionRef('springBoot')
            plugin('dependencyManagement', 'io.spring.dependency-management').versionRef('springDependencyManagement')
            
            // 라이브러리 정의
            library('lombok', 'org.projectlombok', 'lombok').versionRef('lombok')
            library('gson', 'com.google.code.gson', 'gson').versionRef('gson')

            library('jwtApi', 'io.jsonwebtoken', 'jjwt-api').versionRef('jwt')
            library('jwtImpl', 'io.jsonwebtoken', 'jjwt-impl').versionRef('jwt')
            library('jwtJackson', 'io.jsonwebtoken', 'jjwt-jackson').versionRef('jwt')

            library('springCloud', 'org.springframework.cloud', 'spring-cloud-dependencies').versionRef('springCloud')
            library('swagger', 'org.springdoc', 'springdoc-openapi-starter-webmvc-ui').versionRef('swagger')
            
            // Jackson 라이브러리 정의
            library('jacksonDatabind', 'com.fasterxml.jackson.core', 'jackson-databind').versionRef('jackson')
            library('jacksonAnnotations', 'com.fasterxml.jackson.core', 'jackson-annotations').versionRef('jackson')
            library('jacksonJsr310', 'com.fasterxml.jackson.datatype', 'jackson-datatype-jsr310').versionRef('jackson')

            // 버전이 따로 표기되어 있지 않을때 사용
            library('springBootWeb', 'org.springframework.boot', 'spring-boot-starter-web').withoutVersion()
            library('springBootDevtools', 'org.springframework.boot', 'spring-boot-devtools').withoutVersion()
            library('springBootTest', 'org.springframework.boot', 'spring-boot-starter-test').withoutVersion()

        }
    }
}
